const encoder = new TextEncoder();
const algoMap = {
    sha: "SHA-1",
    "sha-1": "SHA-1",
    sha1: "SHA-1",
    sha256: "SHA-256",
    "sha-256": "SHA-256",
    sha384: "SHA-384",
    "sha-384": "SHA-384",
    "sha-512": "SHA-512",
    sha512: "SHA-512",
};
export async function pbkdf2(password, salt, iterations, length, _algo) {
    const algo = algoMap[_algo];
    const key = await crypto.subtle.importKey("raw", encoder.encode(password), { name: "PBKDF2" }, false, ["deriveBits"]);
    return crypto.subtle.deriveBits({
        name: "PBKDF2",
        salt: salt,
        iterations: iterations,
        hash: {
            name: algo,
        },
    }, key, length << 3);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGJrZGYyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGJrZGYyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7QUFFbEMsTUFBTSxPQUFPLEdBQUc7SUFDZCxHQUFHLEVBQUUsT0FBTztJQUNaLE9BQU8sRUFBRSxPQUFPO0lBQ2hCLElBQUksRUFBRSxPQUFPO0lBQ2IsTUFBTSxFQUFFLFNBQVM7SUFDakIsU0FBUyxFQUFFLFNBQVM7SUFDcEIsTUFBTSxFQUFFLFNBQVM7SUFDakIsU0FBUyxFQUFFLFNBQVM7SUFDcEIsU0FBUyxFQUFFLFNBQVM7SUFDcEIsTUFBTSxFQUFFLFNBQVM7Q0FDbEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxLQUFLLFVBQVUsTUFBTSxDQUMxQixRQUFnQixFQUNoQixJQUFnQixFQUNoQixVQUFrQixFQUNsQixNQUFjLEVBQ2QsS0FBd0I7SUFFeEIsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVCLE1BQU0sR0FBRyxHQUFHLE1BQU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQ3ZDLEtBQUssRUFDTCxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUN4QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsRUFDbEIsS0FBSyxFQUNMLENBQUMsWUFBWSxDQUFDLENBQ2YsQ0FBQztJQUVGLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQzdCO1FBQ0UsSUFBSSxFQUFFLFFBQVE7UUFDZCxJQUFJLEVBQUUsSUFBSTtRQUNWLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJO1NBQ1g7S0FDRixFQUNELEdBQUcsRUFDSCxNQUFNLElBQUksQ0FBQyxDQUNaLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuXG5jb25zdCBhbGdvTWFwID0ge1xuICBzaGE6IFwiU0hBLTFcIixcbiAgXCJzaGEtMVwiOiBcIlNIQS0xXCIsXG4gIHNoYTE6IFwiU0hBLTFcIixcbiAgc2hhMjU2OiBcIlNIQS0yNTZcIixcbiAgXCJzaGEtMjU2XCI6IFwiU0hBLTI1NlwiLFxuICBzaGEzODQ6IFwiU0hBLTM4NFwiLFxuICBcInNoYS0zODRcIjogXCJTSEEtMzg0XCIsXG4gIFwic2hhLTUxMlwiOiBcIlNIQS01MTJcIixcbiAgc2hhNTEyOiBcIlNIQS01MTJcIixcbn07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwYmtkZjIoXG4gIHBhc3N3b3JkOiBzdHJpbmcsXG4gIHNhbHQ6IFVpbnQ4QXJyYXksXG4gIGl0ZXJhdGlvbnM6IG51bWJlcixcbiAgbGVuZ3RoOiBudW1iZXIsXG4gIF9hbGdvOiBcInNoYTFcIiB8IFwic2hhMjU2XCIsXG4pIHtcbiAgY29uc3QgYWxnbyA9IGFsZ29NYXBbX2FsZ29dO1xuICBjb25zdCBrZXkgPSBhd2FpdCBjcnlwdG8uc3VidGxlLmltcG9ydEtleShcbiAgICBcInJhd1wiLFxuICAgIGVuY29kZXIuZW5jb2RlKHBhc3N3b3JkKSxcbiAgICB7IG5hbWU6IFwiUEJLREYyXCIgfSxcbiAgICBmYWxzZSxcbiAgICBbXCJkZXJpdmVCaXRzXCJdLFxuICApO1xuXG4gIHJldHVybiBjcnlwdG8uc3VidGxlLmRlcml2ZUJpdHMoXG4gICAge1xuICAgICAgbmFtZTogXCJQQktERjJcIixcbiAgICAgIHNhbHQ6IHNhbHQsXG4gICAgICBpdGVyYXRpb25zOiBpdGVyYXRpb25zLFxuICAgICAgaGFzaDoge1xuICAgICAgICBuYW1lOiBhbGdvLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGtleSxcbiAgICBsZW5ndGggPDwgMyxcbiAgKTtcbn1cbiJdfQ==