export var ReadPreference;
(function (ReadPreference) {
    ReadPreference["Primary"] = "primary";
    ReadPreference["PrimaryPreferred"] = "primaryPreferred";
    ReadPreference["Secondary"] = "secondary";
    ReadPreference["SecondaryPreferred"] = "secondaryPreferred";
    ReadPreference["Nearest"] = "nearest";
})(ReadPreference || (ReadPreference = {}));
//# sourceMappingURL=data:application/json;base64,